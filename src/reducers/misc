const bookReducer = (state = [], action) => {
  switch(action.type) {
    default:
      return state
  }
}



export default bookReducer;


favorite card
<img height="100px" width="100px" src={favorite.book_id.cover} alt={favorite.book_id.title} />
<p>{favorite.book_id.title}</p>
<p>{favorite.book_id.author_id.name}</p>



addAnimal = (animal) => {
  fetch('http://localhost:3000/reviews', {
    method: 'POST',
    headers: {'Content-Type': 'application/json'},
    body: JSON.stringify(animal)
  })
  .then(r => r.json())
  .then(resp => {
    this.setState({animals: [...this.state.animals, resp]})
  })
}

deleteAnimal = (reviewId) => {
  fetch(`http://localhost:3000/reviews/${reviewId}`, {
    method: 'DELETE'
  })
  .then(r => r.json())
  .then(resp -> {
    this.setState({animals: this.state.animals.filter(animal => animal.id != resp.id)})
  })
}

favorite = (animal) => {
this.setState({favorites: [...this.state.favorites, animal]})
}

unfavorite = (animalId) => {
  this.setState({favorites: this.state.favorites.filter(animal => animal.id != animalId)})
}



import React, {Component} from 'react'
import BookCard from '../components/BookCard'
import {connect} from 'react-redux'
import fetchAllBooks from '../actions/fetchAllBooks'
import displayBook from '../actions/displayBook'


class BookContainer extends Component {

  componentDidMount(){
    this.props.fetchAllBooks()
  }

  render() {
    const bookCards = this.props.books.map(book => <BookCard key={book.title} book={book} displayBook={(id)=>this.props.displayBook(id)}/>)
    return(
      <div>{bookCards}</div>
    )
  }
}

const mapStateToProps = (state) => {
  return {
    books: state.books
  }
}

export default connect(mapStateToProps, {fetchAllBooks}, {displayBook})(BookContainer)
